基本方針

勉強用：
	意味的に正しいことをする。
	スピードは度外視する。
	メモリサイズは気にしない。
	最終的には Kataoka Lisp に倒す。

GC のために map を使わない。

ということで以下は問題なし
	意味的には環境が値を持つ。-> Symbol 内にキャッシュはしない
		シンボルが値を持つわけではない。
	シンボルだけで意味を持つことがある -> Symbol 内にキャッシュはしない
	std::string name は共通化したほうが省メモリ -> 考慮しない

GC のために設計変更
	set がでかい -> map をつかう
	set だとコピーをする -> map をつかう
	vector の push_back もでかい -> map をつかう

